---
import { Icon } from "astro-icon/components";

interface Props {
  url: string;
  name: string;
  minimal?: boolean;
  description: string | null;
  stargazersCount: number;
  forksCount: number;
}

const {
  url,
  name,
  description,
  stargazersCount,
  forksCount,
  minimal = false,
} = Astro.props;

function formatNumbers(stars: number) {
  if (stars > 1000) {
    return `${(stars / 1000).toFixed(1)}k`;
  }
  return stars;
}
---

<li
  class="border dark:border-zinc-700 bg-white dark:bg-zinc-800 rounded-md"
  class:list={{
    "p-5": !minimal,
    "p-4": minimal,
  }}
>
  <h2>
    <a
      class="group font-medium dark:text-zinc-200 hover:text-blue-600 dark:hover:text-teal-400 inline-flex gap-1"
      href={url}
      >{name}<Icon
        name="external-link"
        class="opacity-0 group-hover:opacity-100"
      /></a
    >
  </h2>
  <ul class="flex gap-3 mt-1 items-center text-zinc-500 dark:text-zinc-400">
    <li class="inline-flex gap-0.5 items-baseline">
      <Icon name="star" />{formatNumbers(stargazersCount)}
    </li>
    {
      forksCount > 0 && (
        <li class="inline-flex gap-0.5 items-center">
          <Icon name="fork" />
          {formatNumbers(forksCount)}
        </li>
      )
    }
  </ul>
  {description && <p class="leading-relaxed truncate">{description}</p>}
</li>
